{
	"info": {
		"_postman_id": "7df7e798-2394-4bd7-956e-8e0b36fe7d54",
		"name": "DemoBlaze",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32872262"
	},
	"item": [
		{
			"name": "Sign Up Tcs",
			"item": [
				{
					"name": "TC1_Signup New Valid Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of Sign up TC1\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response of [Sign up successful TC1] \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Sign up successful.\");\r",
									"});\r",
									" "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"asmaaaaaaaaaaaa@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL Sign up}}",
							"host": [
								"{{URL Sign up}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignUp _TC2Valid Data Already exit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code  is 200 OF [exist User TC2]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response of exist User TC2\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This user already exist.\");\r",
									"});\r",
									" "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"asmaa@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/signup\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"signup\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_Signup WithoutPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of [ Sign up without password TC3]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Response OF[ Sign up without password TC3]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"missing username or password\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"lalalalala\"\r\n     \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/signup\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"signup\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_Sign UP without name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of [ Sign up without Name TC4]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" \r",
									"pm.test(\"Response OF[ Sign up without Name TC4]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"missing username or password\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"password\": \"12345678\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL Sign up}}",
							"host": [
								"{{URL Sign up}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC5_SignUpWithoutData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OF [Sign UP without Data TC4]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									" pm.test(\"Response OF [Sign UP without Data TC4] \", function () {\r",
									"    pm.response.to.have.body(\"Please fill out Username and Password.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"\",\r\n    \"password\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/signup\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"signup\n"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LogIn",
			"item": [
				{
					"name": "TC1_vaild Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200 OF [ Login with  Vaild Data TC1 ]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response of [ Login with  Vaild Data TC1 ]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Auth_token\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"asmaa@gmail.com\",\r\n    \"password\": \"123456\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL Login}}",
							"host": [
								"{{URL Login}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC2_Wrong Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OF [ Login with  Wrong Password TC2 ]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\" Response OF[ Login with  Wrong Password TC2 ] \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Wrong password.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"asmaa@gmail.com\",\r\n    \"password\": \"12345678910\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/login\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"login\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_login withoutData",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200  OF [ Login withOUT Data TC3 ]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response OF [ Login withOUT Data TC3 ] \", function () {\r",
									"    pm.response.to.have.body(\"Please fill out Username and Password.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"\",\r\n    \"password\": \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/login\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"login\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_User Doesn't Exit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of [Login with User doesn't exist TC4]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response ofof [Login with User doesn't exist TC4]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User does not exist.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"HamadaEzzo2024@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/login\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"login\n"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ADD To Cart",
			"item": [
				{
					"name": "TC1_Get All Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200 of [get all items HOME Page TC1]\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\" expected number of elements  Using [id=1]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.have.property('Items').that.is.an('array');\r",
									"    pm.expect(responseData.Items).to.have.lengthOf.at.least(1);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"LastEvaluatedKey object has the required field 'id'\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.LastEvaluatedKey).to.exist.and.to.have.property('id');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUwMywiaWF0IjoxNzExNTI1NDQ5LCJleHAiOjE3MTMyNTM0NDl9.asdBhw003cWldYt2KZnm-iCnwGJ6kFqnCI_05TJC-s4",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "title",
								"value": "Samsung galaxy s6",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.demoblaze.com/entries\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"entries\n"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "TC2_Check  Token user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 [check username TC2]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response OF [check username TC2] \", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"ahmed123@gmail.com\");\r",
									"});\r",
									" \r",
									"pm.test(\"Response has the required fields - expiration, token, and username [Return value of [check username TC2]]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('Item');\r",
									"    pm.expect(responseData.Item).to.be.an('object');\r",
									"    pm.expect(responseData.Item).to.have.property('expiration');\r",
									"    pm.expect(responseData.Item).to.have.property('token');\r",
									"    pm.expect(responseData.Item).to.have.property('username');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Expiration is a non-negative integer of[check username TC2]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"\r",
									"  pm.expect(responseData.Item).to.exist;\r",
									"  pm.expect(responseData.Item.expiration).to.be.a('number').and.to.be.at.least(0);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Token is a non-empty string of[check username TC2]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.Item.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username is a non-empty string of Response [check username TC2]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"\r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.Item.username).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Username should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is application/json\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 5000ms of Response[check username TC2]\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Item object has the correct structure of [check username TC2]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.Item).to.be.an('object');\r",
									"  pm.expect(responseData.Item.expiration).to.exist.and.to.be.a('number');\r",
									"  pm.expect(responseData.Item.token).to.exist.and.to.be.a('string');\r",
									"  pm.expect(responseData.Item.username).to.exist.and.to.be.a('string');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Expiration field is present and has the correct data type of [check username TC2]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.have.property('Item');\r",
									"    pm.expect(responseData.Item).to.have.property('expiration').that.is.a('number');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Username field is a valid email format of [check username TC2]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData).to.be.an('object');\r",
									"  pm.expect(responseData.Item.username).to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Username should be a valid email format\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Token field is a non-empty string of [check username TC2]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.Item.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUwMywiaWF0IjoxNzExNTI1NDQ5LCJleHAiOjE3MTMyNTM0NDl9.asdBhw003cWldYt2KZnm-iCnwGJ6kFqnCI_05TJC-s4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/check\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"check\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC3_Get single Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200 of [Get single product TC3]\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"pm.test(\" Response OF [The Samsung Galaxy S6 ] [Get single product TC3] Using ID\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The Samsung Galaxy S6\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields [Get single product TC3] Details\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.cat).to.exist;\r",
									"    pm.expect(responseData.desc).to.exist;\r",
									"    pm.expect(responseData.id).to.exist;\r",
									"    pm.expect(responseData.img).to.exist;\r",
									"    pm.expect(responseData.price).to.exist;\r",
									"    pm.expect(responseData.title).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Price is a non-negative integer of [Get single product TC3] Using ID\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.price).to.be.a('number').and.to.satisfy((price) => price >= 0, \"Price must be a non-negative integer\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"ID is a non-negative integer of [Get single product TC3] \", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.id).to.be.a('number').and.to.be.at.least(0, \"ID should be a non-negative integer\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json of  [Get single product TC3] Using ID\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUwMywiaWF0IjoxNzExNTI1NDQ5LCJleHAiOjE3MTMyNTM0NDl9.asdBhw003cWldYt2KZnm-iCnwGJ6kFqnCI_05TJC-s4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/view\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"view\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC4_Add one item to Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OF [Add one item to Cart TC4]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response of [Add one item to Cart TC4]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Product added.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"9442c83b-9221-b512-52da-1839ad97cf16\",\r\n    \"cookie\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\",\r\n    \"prod_id\": 1,\r\n    \"flag\": true\r\n}\r\n ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL ADDCart}}",
							"host": [
								"{{URL ADDCart}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC5-ADD item not available",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of [ADD item not available TC5]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response of [ADD item not available TC5]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"This Items not available\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"26ee2e22-d3a1-9447-7fb9-e765ed92b5c5\",\r\n    \"cookie\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\",\r\n    \"prod_id\": 534,\r\n    \"flag\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/addtocart\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"addtocart\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC6_ADDTow  Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 of [ADD Tow Items TC6]\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjUwMywiaWF0IjoxNzExNTI1NDQ5LCJleHAiOjE3MTMyNTM0NDl9.asdBhw003cWldYt2KZnm-iCnwGJ6kFqnCI_05TJC-s4",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": " \r\n{\r\n    \"id\": \"26ee2e22-d3a1-9447-7fb9-e765ed92b5c5\",\r\n    \"cookie\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\",\r\n    \"prod_id\": 2,\r\n    \"flag\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/addtocart\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"addtocart\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC7_Delete item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\" Response OF [Delete item TC7]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"The method is not allowed for the requested URL.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"26ee2e22-d3a1-9447-7fb9-e765ed92b5c5\",\r\n    \"cookie\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\",\r\n    \"prod_id\": 2,\r\n    \"flag\": true\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/addtocart\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"addtocart\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC8_View Cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200 OF [View Cart TC8]\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response OF Items'IN array OF [View Cart TC8]\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.Items).to.exist.and.to.be.an('array');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Items have non-empty 'cookie' and 'id' strings OF [View Cart TC8]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.Items).to.be.an('array');\r",
									"  responseData.Items.forEach(function(item) {\r",
									"    pm.expect(item.cookie).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
									"    pm.expect(item.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
									"  });\r",
									"});\r",
									"\r",
									"pm.test(\"Prod_id is a non-negative integer OF [View Cart TC8]\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.Items).to.be.an('array');\r",
									"  responseData.Items.forEach(function(item) {\r",
									"    pm.expect(item.prod_id).to.be.a('number').and.to.satisfy((val) => val >= 0, \"Prod_id should be a non-negative integer\");\r",
									"  });\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is application/json OF [View Cart TC8]\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cookie\": \"YWhtZWQxMjNAZ21haWwuY29tMTcxMTY3Mg==\",\r\n    \"flag\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/viewcart\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"viewcart\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC9_Place Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200 OF [Place Order TC9]\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type header is application/json OF [Place Order TC9]\", function () {\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify that the deletecart operation is successful [Place Order TC9]\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									" \r",
									"pm.test(\"Response of [Place Order TC9]\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Item deleted.\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cookie\": \"ahmed123@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.demoblaze.com/deletecart\n",
							"protocol": "https",
							"host": [
								"api",
								"demoblaze",
								"com"
							],
							"path": [
								"deletecart\n"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}